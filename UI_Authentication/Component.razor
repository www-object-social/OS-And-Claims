@inject Product.Infomation PI;
@inject Progress.Manager PM;
@inject UnitIdentification.Engine UIE;
<span>
    <UI_020b1bccContainer.Component>
        <Content>
            <object data="/_content/UI_Product_Logo/OBJECTSOCIAL.svg" class="logo-background" />
            <img src="/_content/UI_Authentication/profil.png" class="profil" />
            <div class="left-line"></div>
            <div class="right-line"></div>
            @switch (this.UIE.ISO639_1)
            {
                case "DA":
                    <div class="questions">Har du en gratis privat konto hos os?</div>
                    <div class="wee-will-make-one">Nej! opret en konto</div>
                     <div class="start-condition">Jeg klikker kun på 'Nej! Opret en konto.' fordi jeg er myndig over 13 år.<br />OBJECT:SOCIAL har lov til at opbevare en nøgle i min enhed. Det gælder også for de enheder jeg logger på.</div>

                break;
                default:
                    <div class="questions">Do you have a free private account with us?</div>
                    <div class="wee-will-make-one">No! Create an account</div>
                    <div class="start-condition">I only click on 'No! Create an account.' because I am of legal age over 13 years.<br />OBJECT:SOCIAL is allowed to store a key in my device. This also applies to the devices I log into.</div>

                break;
            }
            <div class="right-line"></div>

            @if(false)
            @switch (this.UIE.ISO639_1)
            {
                case "DA":
                    <div class="connect">Forbind</div>
                    <div class="mobile">
                        <div class="prefix">DK +45</div>
                        <input type="text" placeholder="Mobil nummer" />
                    </div>
                    <div class="email">
                        <input type="text" placeholder="E-mail" />
                    </div>
                    <div class="or">
                        Eller
                    </div>
                    break;
                default:
                    <div class="connect">Connect</div>
                    <div class="mobile">
                        <div class="prefix">DK +45</div>
                        <input type="text" placeholder="Mobile number" />
                    </div>
                    <div class="email">
                        <input type="text" placeholder="E-mail" />
                    </div>
                    <div class="or">
                        Or
                    </div>
                    break;
            }
            <div class="choice-preifx">
                @for (int i = 0; i < 400; i++)
                {
                    <div class="item">
                        <div class="iso6311">DK</div>
                        <div class="prefix-number">+000000</div>
                        <div class="country">Denmark</div>
                    </div>
                }
            </div>
            <div class="cancel-choice-preifx">
                Cancel
            </div>
            <img src="/_content/UI_Authentication/security.png" class="security" />
        </Content>
    </UI_020b1bccContainer.Component>
</span>
@code{
    protected override Task OnInitializedAsync()
    {
        PM.Change += () => InvokeAsync(this.StateHasChanged);
        UIE.Change += () => InvokeAsync(this.StateHasChanged);
        return base.OnInitializedAsync();
    }
}